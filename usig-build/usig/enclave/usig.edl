// Copyright (c) 2018 NEC Laboratories Europe GmbH.
//
// Authors: Sergey Fedorov <sergey.fedorov@neclab.eu>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

enclave {
    include "sgx_tcrypto.h"
    include "../enclave/types.h"
    include "stdbool.h"

    trusted {
        public sgx_status_t ecall_usig_init(
            [in, size=sealed_data_size] void *sealed_data,
            uint32_t sealed_data_size,
            size_t given_cpu_features
        );

        public sgx_status_t ecall_usig_get_sealed_key_size(
            [out] uint32_t *size
        );

        public sgx_status_t ecall_usig_seal_key(
            [out, size=sealed_data_size] void *sealed_data,
            uint32_t sealed_data_size
        );

        public sgx_status_t ecall_usig_get_epoch([out] uint64_t *epoch);

        public sgx_status_t ecall_usig_get_pub_key(
            [out] sgx_ec256_public_t *pub_key
        );

        public sgx_status_t ecall_usig_create_ui(
            [in, isary] sgx_sha256_hash_t digest,
            [out] uint64_t *counter,
            [out] sgx_ec256_signature_t *signature
        );

        public sgx_status_t ecall_usig_create_ui_shared_key(
            [in, count=cnt] uint8_t *input, size_t cnt,
            [out] uint64_t *counter,
            [out, isary] sgx_sha256_hash_t hmac
        );

        public sgx_status_t ecall_usig_verify_ui_shared_key(
            [in] uint64_t *counter,
            [in, isary] sgx_sha256_hash_t hmac,
            [in, count=cnt] uint8_t *input, size_t cnt,
            [out] bool *valid
        );
    };

    untrusted {
    };
};
